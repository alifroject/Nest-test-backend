generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String        @unique
  password     String?
  phoneNumber  String?
  provider     Provider      @default(local)
  role         Role          @default(user)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Session      Session[]
  budgets      Budget[]
  transactions Transaction[]
  reports      Report[]
  categories   Category[]
}
model Session {
  id         Int       @id @default(autoincrement())
  userId     Int
  token      String    @unique
  createdAt  DateTime  @default(now())
  expiresAt  DateTime
  revoked    Boolean   @default(false)
  user       User      @relation(fields: [userId], references: [id])
}

model Budget {
  id           Int           @id @default(autoincrement())
  userId       Int
  name         String        // user-defined name, e.g., "Groceries", "October Budget"
  category     String?       // optional grouping (e.g., Food, Utilities)
  limitAmount  Decimal       // spending limit
  startDate    DateTime      // defines budget period start
  endDate      DateTime      // defines budget period end
  isRecurring  Boolean       @default(false) // if true, auto-renews for next period
  status       String        @default("active") // can be 'active', 'completed', 'archived'
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}


model Transaction {
  id           Int           @id @default(autoincrement())
  budgetId     Int
  userId       Int
  type         TransactionType
  amount       Decimal
  description  String?
  date         DateTime      @default(now())
  createdAt    DateTime      @default(now())
  categoryId   Int?

  user         User          @relation(fields: [userId], references: [id])
  budget       Budget        @relation(fields: [budgetId], references: [id])
  category     Category?     @relation(fields: [categoryId], references: [id])
}

model Report {
  id           Int           @id @default(autoincrement())
  userId       Int
  month        Int
  year         Int
  totalIncome  Decimal       @default(0)
  totalExpense Decimal       @default(0)
  netBalance   Decimal       @default(0)
  createdAt    DateTime      @default(now())

  user         User          @relation(fields: [userId], references: [id])
}

model Category {
  id           Int           @id @default(autoincrement())
  userId       Int
  name         String
  type         CategoryType  @default(expense)
  color        String?
  createdAt    DateTime      @default(now())

  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

enum Provider {
  local
  google
}

enum Role {
  user
  admin
}

enum TransactionType {
  income
  expense
}

enum CategoryType {
  income
  expense
}
