generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String        @unique
  password     String?
  phoneNumber  String?
  provider     Provider      @default(local)
  role         Role          @default(user)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  budgets      Budget[]
  categories   Category[]
  reports      Report[]
  Session      Session[]
  transactions Transaction[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  revoked   Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
}

model Budget {
  id           Int           @id @default(autoincrement())
  userId       Int
  name         String
  category     String?
  limitAmount  Decimal
  startDate    DateTime
  endDate      DateTime
  isRecurring  Boolean       @default(false)
  status       String        @default("active")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@index([userId, createdAt])
}

model Transaction {
  id          Int             @id @default(autoincrement())
  budgetId    Int
  userId      Int
  type        TransactionType
  amount      Decimal
  description String?
  date        DateTime        @default(now())
  createdAt   DateTime        @default(now())
  categoryId  Int?
  budget      Budget          @relation(fields: [budgetId], references: [id])
  category    Category?       @relation(fields: [categoryId], references: [id])
  user        User            @relation(fields: [userId], references: [id])
}

model Report {
  id           Int      @id @default(autoincrement())
  userId       Int
  month        Int
  year         Int
  totalIncome  Decimal  @default(0)
  totalExpense Decimal  @default(0)
  netBalance   Decimal  @default(0)
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])
}

model Category {
  id           Int           @id @default(autoincrement())
  userId       Int
  name         String
  type         CategoryType  @default(expense)
  color        String?
  createdAt    DateTime      @default(now())
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

enum Provider {
  local
  google
}

enum Role {
  user
  admin
}

enum TransactionType {
  income
  expense
}

enum CategoryType {
  income
  expense
}
